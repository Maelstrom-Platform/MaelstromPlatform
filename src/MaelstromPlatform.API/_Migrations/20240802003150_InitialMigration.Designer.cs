// <auto-generated />
using System;
using MaelstromPlatform.API.DbContexts;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace MaelstromPlatform.API._Migrations
{
    [DbContext(typeof(MaelstromContext))]
    [Migration("20240802003150_InitialMigration")]
    partial class InitialMigration
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.7")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("MaelstromPlatform.API.Issue.IssueApprovalEntity", b =>
                {
                    b.Property<Guid>("SysId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("Approved")
                        .HasColumnType("bit");

                    b.Property<Guid>("IssueApproverEntitySysId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("IssueEntitySysId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("SysId");

                    b.HasIndex("IssueApproverEntitySysId");

                    b.HasIndex("IssueEntitySysId");

                    b.ToTable("IssueApprovals");
                });

            modelBuilder.Entity("MaelstromPlatform.API.Issue.IssueApproverEntity", b =>
                {
                    b.Property<Guid>("SysId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("Optional")
                        .HasColumnType("bit");

                    b.Property<Guid>("PersonEntitySysId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("SysId");

                    b.HasIndex("PersonEntitySysId");

                    b.ToTable("IssueApprovers");
                });

            modelBuilder.Entity("MaelstromPlatform.API.Issue.IssueChampionEntity", b =>
                {
                    b.Property<Guid>("SysId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("SysId");

                    b.ToTable("IssueChampions");
                });

            modelBuilder.Entity("MaelstromPlatform.API.Issue.IssueEntity", b =>
                {
                    b.Property<Guid>("SysId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("Approved")
                        .HasColumnType("bit");

                    b.Property<Guid>("FoundByPrimaryPersonSysId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("FoundOn")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("GETUTCDATE()");

                    b.Property<string>("Identifier")
                        .IsRequired()
                        .HasMaxLength(64)
                        .HasColumnType("nvarchar(64)");

                    b.Property<Guid>("IssueKindSysId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("IssuePrioritySysId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("IssueSeveritySysId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("IssueStateSysId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("IssueStatusSysId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("Origin")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("GETUTCDATE()");

                    b.Property<Guid>("PrimaryChampionSysId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("PrimaryFoundByTeamSysId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("PrimaryOwnerSysId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("PrimaryOwnerTeamSysId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("PrimaryReportedByTeamSysId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ProblemStatement")
                        .IsRequired()
                        .HasMaxLength(8192)
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("ReportedByPrimaryPersonSysId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("ReportedOn")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("GETUTCDATE()");

                    b.Property<bool>("Resolved")
                        .HasColumnType("bit");

                    b.Property<string>("StepsToReproduce")
                        .IsRequired()
                        .HasMaxLength(8192)
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SummaryBrief")
                        .IsRequired()
                        .HasMaxLength(72)
                        .HasColumnType("nvarchar(72)");

                    b.Property<string>("SummaryLong")
                        .IsRequired()
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("WorkAround")
                        .IsRequired()
                        .HasMaxLength(8192)
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("SysId");

                    b.HasIndex("FoundByPrimaryPersonSysId");

                    b.HasIndex("IssueKindSysId");

                    b.HasIndex("IssuePrioritySysId");

                    b.HasIndex("IssueSeveritySysId");

                    b.HasIndex("IssueStateSysId");

                    b.HasIndex("IssueStatusSysId");

                    b.HasIndex("PrimaryChampionSysId");

                    b.HasIndex("PrimaryFoundByTeamSysId");

                    b.HasIndex("PrimaryOwnerSysId");

                    b.HasIndex("PrimaryOwnerTeamSysId");

                    b.HasIndex("PrimaryReportedByTeamSysId");

                    b.HasIndex("ReportedByPrimaryPersonSysId");

                    b.ToTable("Issues");
                });

            modelBuilder.Entity("MaelstromPlatform.API.Issue.IssueKindEntity", b =>
                {
                    b.Property<Guid>("SysId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Identifier")
                        .IsRequired()
                        .HasMaxLength(64)
                        .HasColumnType("nvarchar(64)");

                    b.Property<string>("Kind")
                        .IsRequired()
                        .HasMaxLength(32)
                        .HasColumnType("nvarchar(32)");

                    b.Property<string>("Usage")
                        .IsRequired()
                        .HasMaxLength(8192)
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("SysId");

                    b.ToTable("IssueKinds");
                });

            modelBuilder.Entity("MaelstromPlatform.API.Issue.IssuePriorityEntity", b =>
                {
                    b.Property<Guid>("SysId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Identifier")
                        .IsRequired()
                        .HasMaxLength(64)
                        .HasColumnType("nvarchar(64)");

                    b.Property<string>("Priority")
                        .IsRequired()
                        .HasMaxLength(32)
                        .HasColumnType("nvarchar(32)");

                    b.Property<string>("Usage")
                        .IsRequired()
                        .HasMaxLength(8192)
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("SysId");

                    b.ToTable("IssuePriorities");
                });

            modelBuilder.Entity("MaelstromPlatform.API.Issue.IssueSeverityEntity", b =>
                {
                    b.Property<Guid>("SysId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Identifier")
                        .IsRequired()
                        .HasMaxLength(64)
                        .HasColumnType("nvarchar(64)");

                    b.Property<string>("Severity")
                        .IsRequired()
                        .HasMaxLength(32)
                        .HasColumnType("nvarchar(32)");

                    b.Property<string>("Usage")
                        .IsRequired()
                        .HasMaxLength(8192)
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("SysId");

                    b.ToTable("IssueSeverities");
                });

            modelBuilder.Entity("MaelstromPlatform.API.Issue.IssueStateEntity", b =>
                {
                    b.Property<Guid>("SysId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Identifier")
                        .IsRequired()
                        .HasMaxLength(64)
                        .HasColumnType("nvarchar(64)");

                    b.Property<string>("State")
                        .IsRequired()
                        .HasMaxLength(32)
                        .HasColumnType("nvarchar(32)");

                    b.Property<string>("Usage")
                        .IsRequired()
                        .HasMaxLength(8192)
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("SysId");

                    b.ToTable("IssueStates");
                });

            modelBuilder.Entity("MaelstromPlatform.API.Issue.IssueStatusEntity", b =>
                {
                    b.Property<Guid>("SysId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Identifier")
                        .IsRequired()
                        .HasMaxLength(64)
                        .HasColumnType("nvarchar(64)");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasMaxLength(32)
                        .HasColumnType("nvarchar(32)");

                    b.Property<string>("Usage")
                        .IsRequired()
                        .HasMaxLength(8192)
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("SysId");

                    b.ToTable("IssueStatuses");
                });

            modelBuilder.Entity("MaelstromPlatform.API.Person.PersonEntity", b =>
                {
                    b.Property<Guid>("SysId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Identifier")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MiddleName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("SysId");

                    b.ToTable("People");
                });

            modelBuilder.Entity("MaelstromPlatform.API.Team.TeamEntity", b =>
                {
                    b.Property<Guid>("SysId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Identifier")
                        .IsRequired()
                        .HasMaxLength(64)
                        .HasColumnType("nvarchar(64)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("SysId");

                    b.ToTable("Teams");
                });

            modelBuilder.Entity("MaelstromPlatform.API.Issue.IssueApprovalEntity", b =>
                {
                    b.HasOne("MaelstromPlatform.API.Issue.IssueApproverEntity", "IssueApprover")
                        .WithMany()
                        .HasForeignKey("IssueApproverEntitySysId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("MaelstromPlatform.API.Issue.IssueEntity", "Issue")
                        .WithMany("Approvals")
                        .HasForeignKey("IssueEntitySysId")
                        .OnDelete(DeleteBehavior.ClientNoAction)
                        .IsRequired();

                    b.Navigation("Issue");

                    b.Navigation("IssueApprover");
                });

            modelBuilder.Entity("MaelstromPlatform.API.Issue.IssueApproverEntity", b =>
                {
                    b.HasOne("MaelstromPlatform.API.Person.PersonEntity", "PersonEntity")
                        .WithMany()
                        .HasForeignKey("PersonEntitySysId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("PersonEntity");
                });

            modelBuilder.Entity("MaelstromPlatform.API.Issue.IssueEntity", b =>
                {
                    b.HasOne("MaelstromPlatform.API.Person.PersonEntity", "FoundByPrimaryPerson")
                        .WithMany("IssuesFound")
                        .HasForeignKey("FoundByPrimaryPersonSysId")
                        .OnDelete(DeleteBehavior.ClientNoAction)
                        .IsRequired();

                    b.HasOne("MaelstromPlatform.API.Issue.IssueKindEntity", "IssueKind")
                        .WithMany("Issues")
                        .HasForeignKey("IssueKindSysId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("MaelstromPlatform.API.Issue.IssuePriorityEntity", "IssuePriority")
                        .WithMany("Issues")
                        .HasForeignKey("IssuePrioritySysId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("MaelstromPlatform.API.Issue.IssueSeverityEntity", "IssueSeverity")
                        .WithMany("Issues")
                        .HasForeignKey("IssueSeveritySysId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("MaelstromPlatform.API.Issue.IssueStateEntity", "IssueState")
                        .WithMany("Issues")
                        .HasForeignKey("IssueStateSysId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("MaelstromPlatform.API.Issue.IssueStatusEntity", "IssueStatus")
                        .WithMany("Issues")
                        .HasForeignKey("IssueStatusSysId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("MaelstromPlatform.API.Person.PersonEntity", "PrimaryChampion")
                        .WithMany("IssuesChampioned")
                        .HasForeignKey("PrimaryChampionSysId")
                        .OnDelete(DeleteBehavior.ClientNoAction)
                        .IsRequired();

                    b.HasOne("MaelstromPlatform.API.Team.TeamEntity", "PrimaryFoundByTeam")
                        .WithMany("IssuesFound")
                        .HasForeignKey("PrimaryFoundByTeamSysId")
                        .OnDelete(DeleteBehavior.ClientNoAction)
                        .IsRequired();

                    b.HasOne("MaelstromPlatform.API.Person.PersonEntity", "PrimaryOwner")
                        .WithMany("IssuesOwned")
                        .HasForeignKey("PrimaryOwnerSysId")
                        .OnDelete(DeleteBehavior.ClientNoAction)
                        .IsRequired();

                    b.HasOne("MaelstromPlatform.API.Team.TeamEntity", "PrimaryOwnerTeam")
                        .WithMany("IssuesOwned")
                        .HasForeignKey("PrimaryOwnerTeamSysId")
                        .OnDelete(DeleteBehavior.ClientNoAction)
                        .IsRequired();

                    b.HasOne("MaelstromPlatform.API.Team.TeamEntity", "PrimaryReportedByTeam")
                        .WithMany("IssuesReported")
                        .HasForeignKey("PrimaryReportedByTeamSysId")
                        .OnDelete(DeleteBehavior.ClientNoAction)
                        .IsRequired();

                    b.HasOne("MaelstromPlatform.API.Person.PersonEntity", "ReportedByPrimaryPerson")
                        .WithMany("IssuesReported")
                        .HasForeignKey("ReportedByPrimaryPersonSysId")
                        .OnDelete(DeleteBehavior.ClientNoAction)
                        .IsRequired();

                    b.Navigation("FoundByPrimaryPerson");

                    b.Navigation("IssueKind");

                    b.Navigation("IssuePriority");

                    b.Navigation("IssueSeverity");

                    b.Navigation("IssueState");

                    b.Navigation("IssueStatus");

                    b.Navigation("PrimaryChampion");

                    b.Navigation("PrimaryFoundByTeam");

                    b.Navigation("PrimaryOwner");

                    b.Navigation("PrimaryOwnerTeam");

                    b.Navigation("PrimaryReportedByTeam");

                    b.Navigation("ReportedByPrimaryPerson");
                });

            modelBuilder.Entity("MaelstromPlatform.API.Issue.IssueEntity", b =>
                {
                    b.Navigation("Approvals");
                });

            modelBuilder.Entity("MaelstromPlatform.API.Issue.IssueKindEntity", b =>
                {
                    b.Navigation("Issues");
                });

            modelBuilder.Entity("MaelstromPlatform.API.Issue.IssuePriorityEntity", b =>
                {
                    b.Navigation("Issues");
                });

            modelBuilder.Entity("MaelstromPlatform.API.Issue.IssueSeverityEntity", b =>
                {
                    b.Navigation("Issues");
                });

            modelBuilder.Entity("MaelstromPlatform.API.Issue.IssueStateEntity", b =>
                {
                    b.Navigation("Issues");
                });

            modelBuilder.Entity("MaelstromPlatform.API.Issue.IssueStatusEntity", b =>
                {
                    b.Navigation("Issues");
                });

            modelBuilder.Entity("MaelstromPlatform.API.Person.PersonEntity", b =>
                {
                    b.Navigation("IssuesChampioned");

                    b.Navigation("IssuesFound");

                    b.Navigation("IssuesOwned");

                    b.Navigation("IssuesReported");
                });

            modelBuilder.Entity("MaelstromPlatform.API.Team.TeamEntity", b =>
                {
                    b.Navigation("IssuesFound");

                    b.Navigation("IssuesOwned");

                    b.Navigation("IssuesReported");
                });
#pragma warning restore 612, 618
        }
    }
}
